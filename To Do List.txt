Problem- 
Like most users, Chef didn’t know that he could add problems to a personal to-do list by clicking on the magic '+' symbol on the top-right of each problem 
page. But once he found out about it, he went crazy and added loads of problems to his to-do list without looking at their difficulty rating.

Chef is a beginner and should ideally try and solve only problems with difficulty rating strictly less than 1000. 
Given a list of difficulty ratings for problems in the Chef’s to-do list, please help him identify how many of those problems Chef should remove 
from his to-do list, so that he is only left with problems of difficulty rating less than 1000.

Input Format
The first line of input will contain a single integer T, the number of test cases. Then the testcases follow.
Each testcase consists of 2 lines of input.
The first line of input of each test case contains a single integer, NN, which is the total number of problems that the Chef has added to his to-do list.
The second line of input of each test case contains N space-separated integers D_1, D_2, D_N , which are the difficulty ratings for each problem in the 
to-do list.

Output Format
For each test case, output in a single line the number of problems that Chef will have to remove so that all remaining problems have a difficulty rating 
strictly less than 1000.

Sample 1:

Input - 

5
3
800 1200 900
4
999 1000 1001 1002
5
1 2 2 2 5000
5
1000 1000 1000 1000 1000
3
900 700 800

Output - 
1
3
1
5
0


Code - 
#include <iostream>
using namespace std;

int main() {
    
    int T;
    cin>>T;
    
    while(T>0){
        int n;
        cin>>n;
        
        int arr[n];  //Array arr of size n

        for(int i=0;i<n;i++){
            cin>>arr[i];
        }
        
        int counter = 0;
        
        for(int i=0;i<n;i++){
            if(arr[i]>=1000) counter++; 
        }
        cout<<counter<<endl;
        
        
        T--;
    }
	return 0;
}